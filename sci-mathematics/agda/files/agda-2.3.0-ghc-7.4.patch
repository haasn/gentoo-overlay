--- Agda-2.3.0-orig/src/full/Agda/TypeChecking/Rules/LHS/Unify.hs	2011-11-23 19:12:57.000000000 +1100
+++ Agda-2.3.0/src/full/Agda/TypeChecking/Rules/LHS/Unify.hs	2012-02-09 20:06:48.230528952 +1100
@@ -9,7 +9,7 @@
 import Control.Monad.State
 import Control.Monad.Reader
 import Control.Monad.Error
-import Control.Monad.Writer
+import Control.Monad.Writer (Monoid, WriterT, MonadWriter, listen, mappend, mempty, tell, runWriterT)
 
 import Data.Map (Map)
 import qualified Data.Map as Map
--- Agda-2.3.0-orig/src/full/Agda/TypeChecking/Monad/Base.hs	2011-11-23 19:12:57.000000000 +1100
+++ Agda-2.3.0/src/full/Agda/TypeChecking/Monad/Base.hs	2012-02-09 20:00:43.809421520 +1100
@@ -1125,8 +1125,8 @@
     lift m = TCM $ \_ _ -> m
 
 -- We want a special monad implementation of fail.
-{-# SPECIALIZE instance Monad TCM #-}
 instance MonadIO m => Monad (TCMT m) where
+    {-# SPECIALIZE instance Monad TCM #-}
     return x = TCM $ \_ _ -> return x
     TCM m >>= k = TCM $ \r e -> do
         x <- m r e
